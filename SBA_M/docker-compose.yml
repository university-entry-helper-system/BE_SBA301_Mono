services:
  backend-service:
    container_name: backend-service
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: SBA_M

      SPRING_DATASOURCE_URL: jdbc:postgresql://ep-morning-voice-a12ydsc4-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
      SPRING_DATASOURCE_USERNAME: neondb_owner
      SPRING_DATASOURCE_PASSWORD: npg_pJ39SmHTNgiU
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver

      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true

      JWT_SECRET: hSodUw7fA9PpLVZWpmjeS8cBNbxCxyKOouY3sqA9Dgg=
      JWT_EXPIRATION: 86400000
      JWT_ACCESS_TOKEN_EXPIRATION_MS: 1800000
      JWT_REFRESH_TOKEN_EXPIRATION_MS: 604800000

      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: nsn15102004@gmail.com
      SPRING_MAIL_PASSWORD: cbky fiqp xyjc wxie
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
      SPRING_MAIL_TEST_CONNECTION: false

      APP_ACTIVATION_CODE_EXPIRATION_MINUTES: 15
      APP_PASSWORD_RESET_CODE_EXPIRATION_MINUTES: 30

      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: org.springframework.kafka.support.serializer.JsonSerializer
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: org.springframework.kafka.support.serializer.JsonDeserializer
      SPRING_KAFKA_CONSUMER_GROUP_ID: sba-group
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "*"

      SPRING_DATA_MONGODB_URI: mongodb+srv://phuy61371:12345@cluster0.gebzxrs.mongodb.net/mydatabase?retryWrites=true&w=majority&appName=Cluster0
      SPRING_DATA_MONGODB_DATABASE: mydatabase
      SPRING_DATA_MONGODB_DROP_ON_STARTUP: false

      ELASTICSEARCH_URIS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: robin
      ELASTICSEARCH_PASSWORD: 12345
      ELASTICSEARCH_CONNECTION_TIMEOUT: 3s
      ELASTICSEARCH_SOCKET_TIMEOUT: 5s

      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: robin
      MINIO_SECRET_KEY: admin123456
      MINIO_BUCKET: mybucket
      MINIO_REGION: us-east-1
    depends_on:
      - kafka
      - elasticsearch
      - minio
    networks:
      - backend-net

  kafka:
    image: bitnami/kafka:3.7.0
    container_name: kafka
    hostname: kafka
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - backend-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - backend-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - backend-net

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: robin
      MINIO_ROOT_PASSWORD: admin123456
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - backend-net

volumes:
  es-data:
  minio-data:

networks:
  backend-net:
    driver: bridge
